---
// Dados da galeria
const galeriaItems = [
  {
    id: 8,
    tipo: 'video',
    tipoVideo: 'local',
    titulo: 'Aftermovie - Casarão 682',
    descricao: '31/05/2025 - Jaú/SP',
    thumbnail: '/banda.webp',
    videoSrc: '/banda-video.mp4',
    objectPosition: 'object-center',
    url: '#'
  },
  {
    id: 1,
    tipo: 'foto',
    titulo: 'Casarão 682',
    descricao: '31/05/2025 - Jaú/SP',
    imagem: '/galeria/fotos/casarao1.webp',
    objectPosition: 'object-center',
    url: '#'
  },
  {
    id: 2,
    tipo: 'foto',
    titulo: 'Casarão 682',
    descricao: '31/05/2025 - Jaú/SP', 
    imagem: '/galeria/fotos/casarao2.webp',
    objectPosition: 'object-center',
    url: '#'
  },
  {
    id: 3,
    tipo: 'foto',
    titulo: 'Casarão 682',
    descricao: '31/05/2025 - Jaú/SP',
    imagem: '/galeria/fotos/casarao3.webp',
    objectPosition: 'object-center',
    url: '#'
  },
  {
    id: 4,
    tipo: 'foto',
    titulo: 'Casarão 682',
    descricao: '31/05/2025 - Jaú/SP',
    imagem: '/galeria/fotos/casarao4.webp',
    objectPosition: 'object-center',
    url: '#'
  },
  {
    id: 5,
    tipo: 'foto',
    titulo: 'Casarão 682',
    descricao: '31/05/2025 - Jaú/SP',
    imagem: '/galeria/fotos/casarao5.webp',
    objectPosition: 'object-[100%_30%]',
    url: '#'
  },
  {
    id: 6,
    tipo: 'foto',
    titulo: 'Casarão 682',
    descricao: '31/05/2025 - Jaú/SP',
    imagem: '/galeria/fotos/casarao6.webp',
    objectPosition: 'object-center',
    url: '#'
  },
  {
    id: 7,
    tipo: 'foto',
    titulo: 'Casarão 682',
    descricao: '31/05/2025 - Jaú/SP',
    imagem: '/galeria/fotos/casarao7.webp',
    objectPosition: 'object-center',
    url: '#'
  }
];
---

<section id="galeria" class="py-16 bg-black">
  <div class="container px-4 md:px-6 mx-auto">
    <h2 class="text-3xl font-bebas text-[#b9963d] uppercase mb-4 text-center tracking-wider">
      Galeria
    </h2>


    <!-- Filtros -->
    <div class="flex justify-center mb-12">
      <div class="flex flex-wrap gap-4 bg-gray-900/50 p-2 rounded-lg border border-gray-800 ">
        <button 
          data-filter="todos" 
          class="filter-btn active px-6 py-2 font-bebas uppercase tracking-wider text-md transition-all duration-300 rounded-md"
        >
          Todos
        </button>
        <button 
          data-filter="video" 
          class="filter-btn px-6 py-2 font-bebas uppercase tracking-wider text-md transition-all duration-300 rounded-md"
        >
          Vídeos
        </button>
        <button 
          data-filter="foto" 
          class="filter-btn px-6 py-2 font-bebas uppercase tracking-wider text-md transition-all duration-300 rounded-md"
        >
          Fotos
        </button>
      </div>
    </div>

    <!-- Grid da Galeria -->
    <div class="grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6" id="galeria-grid">
      {galeriaItems.map((item) => (
        <div 
          class={`galeria-item group cursor-pointer transition-all duration-300 ${item.tipo}`}
          data-tipo={item.tipo}
          data-tipo-video={item.tipoVideo || ''}
          data-video-src={item.videoSrc || ''}
          data-video-id={'videoId' in item ? item.videoId || '' : ''}
          data-titulo={item.titulo}
          data-descricao={item.descricao}
        >
          <div class="aspect-video relative mb-4 overflow-hidden rounded-md bg-gray-900">
            <!-- Overlay de interação -->
            <div class="absolute inset-0 bg-black/60 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 z-10">
              {item.tipo === 'video' ? (
                <svg class="h-12 w-12 text-[#b9963d]" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M8 5v14l11-7z"/>
                </svg>
              ) : (
                <svg class="h-12 w-12 text-[#b9963d]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                </svg>
              )}
            </div>
            
            <!-- Imagem/Thumbnail -->
            <img
              src={item.thumbnail || item.imagem}
              alt={item.titulo}
              class={`w-full h-full object-cover group-hover:scale-110 transition-transform duration-300 ${item.objectPosition || 'object-center'}`}
              loading="lazy"
            />
            
            <!-- Ícone de Play para Vídeos (sempre visível) -->
            {item.tipo === 'video' && (
              <div class="absolute inset-0 flex items-center justify-center z-15 pointer-events-none">
                <div class="bg-black/70 rounded-full p-4 border-2 border-[#b9963d] shadow-lg">
                  <svg class="h-8 w-8 text-[#b9963d] ml-1" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M8 5v14l11-7z"/>
                  </svg>
                </div>
              </div>
            )}
            
            <!-- Badge do tipo -->
            <div class="absolute top-3 left-3 z-20">
              <span class={`px-2 py-1 text-xs font-semibold uppercase rounded ${
                item.tipo === 'video' 
                  ? 'bg-red-600 text-white' 
                  : 'bg-blue-600 text-white'
              }`}>
                {item.tipo === 'video' ? 'Vídeo' : 'Foto'}
              </span>
            </div>
          </div>
          
          <!-- Informações do item -->
          <div class="space-y-1">
            <h3 class="text-lg font-bebas text-[#b9963d] uppercase tracking-wider group-hover:text-[#d4a852] transition-colors">
              {item.titulo}
            </h3>
            <p class="text-[#e0e0e0] text-sm opacity-80">
              {item.descricao}
            </p>
          </div>
        </div>
      ))}
    </div>

    <!-- Botão Ver Mais -->
    <div class="mt-12 text-center">
      <button 
        id="ver-galeria-btn"
        class="inline-flex items-center gap-2 px-6 py-3 border-2 border-[#b9963d] text-[#b9963d] hover:bg-[#b9963d] hover:text-black font-bebas uppercase tracking-wider transition-all duration-300 rounded-md group cursor-pointer"
      >
        Ver galeria completa
        <svg class="h-4 w-4 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
        </svg>
      </button>
    </div>
  </div>
</section>

<!-- Modal para visualizar imagens/vídeos -->
<div id="modal" class="fixed inset-0 bg-black/90 z-50 hidden items-center justify-center p-4">
  <div class="relative max-w-4xl w-full">
    <button 
      id="modal-close" 
      class="absolute -top-12 right-0 text-white hover:text-[#b9963d] transition-colors z-10"
    >
      <svg class="h-8 w-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
      </svg>
    </button>
    <div id="modal-content" class="bg-gray-900 rounded-lg overflow-hidden">
      <!-- Conteúdo será inserido dinamicamente -->
    </div>
  </div>
</div>

<style>
  .filter-btn {
    @apply text-gray-400 hover:text-[#b9963d] hover:bg-gray-800;
  }
  
  .filter-btn.active {
    @apply bg-[#b9963d] text-black;
  }
  
  .galeria-item {
    transform: scale(1);
  }
  
  .galeria-item.hidden {
    @apply opacity-0 scale-95 pointer-events-none;
  }
  
  .galeria-item:hover {
    transform: scale(1.02);
  }
  
  /* Animação suave para filtros */
  .galeria-item {
    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
  }
</style>

<script>
  // Funcionalidade de filtros
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const galeriaItems = document.querySelectorAll('.galeria-item');
    const modal = document.getElementById('modal');
    const modalContent = document.getElementById('modal-content');
    const modalClose = document.getElementById('modal-close');
    const verGaleriaBtn = document.getElementById('ver-galeria-btn');
    
    // Verificar se os elementos existem
    if (!modal || !modalContent || !modalClose) return;
    
    // Filtros
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Remove active de todos os botões
        filterButtons.forEach(btn => btn.classList.remove('active'));
        // Adiciona active ao botão clicado
        button.classList.add('active');
        
        const filter = button.getAttribute('data-filter');
        if (!filter) return;
        
        galeriaItems.forEach(item => {
          const itemTipo = item.getAttribute('data-tipo');
          
          if (filter === 'todos' || filter === itemTipo) {
            item.classList.remove('hidden');
          } else {
            item.classList.add('hidden');
          }
        });
      });
    });
    
    // Modal para visualizar itens
    galeriaItems.forEach(item => {
      item.addEventListener('click', () => {
        const tipo = item.getAttribute('data-tipo');
        const tipoVideo = item.getAttribute('data-tipo-video');
        const videoSrc = item.getAttribute('data-video-src');
        const videoId = item.getAttribute('data-video-id');
        const titulo = item.getAttribute('data-titulo') || '';
        const descricao = item.getAttribute('data-descricao') || '';
        const imagemElement = item.querySelector('img');
        const imagem = imagemElement?.src || '';
        
        if (!tipo) return;
        
        let content = '';
        
        if (tipo === 'video') {
          if (tipoVideo === 'local' && videoSrc) {
            // Vídeo local
            content = `
              <div class="aspect-video">
                <video controls class="w-full h-full rounded-lg" autoplay>
                  <source src="${videoSrc}" type="video/mp4">
                  Seu navegador não suporta vídeo HTML5.
                </video>
              </div>
              <div class="p-6">
                <h3 class="text-xl font-bebas text-[#b9963d] uppercase">${titulo}</h3>
                <p class="text-gray-300 text-sm">${descricao}</p>
              </div>
            `;
          } else if (tipoVideo === 'youtube' && videoId) {
            // YouTube
            content = `
              <div class="aspect-video">
                <iframe 
                  src="https://www.youtube.com/embed/${videoId}?autoplay=1" 
                  class="w-full h-full rounded-lg"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowfullscreen>
                </iframe>
              </div>
              <div class="p-6">
                <h3 class="text-xl font-bebas text-[#b9963d] uppercase">${titulo}</h3>
                <p class="text-gray-300 text-sm">${descricao}</p>
              </div>
            `;
          } else if (tipoVideo === 'cloudinary' && videoSrc) {
            // Cloudinary ou outros vídeos externos
            content = `
              <div class="aspect-video">
                <video controls class="w-full h-full rounded-lg" autoplay>
                  <source src="${videoSrc}" type="video/mp4">
                  Seu navegador não suporta vídeo HTML5.
                </video>
              </div>
              <div class="p-6">
                <h3 class="text-xl font-bebas text-[#b9963d] uppercase">${titulo}</h3>
                <p class="text-gray-300 text-sm">${descricao}</p>
              </div>
            `;
          } else {
            // Fallback para vídeos sem configuração adequada
            content = `
              <div class="aspect-video bg-gray-800 flex items-center justify-center">
                <div class="text-center text-gray-400">
                  <svg class="h-16 w-16 mx-auto mb-4" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M8 5v14l11-7z"/>
                  </svg>
                  <p class="text-lg font-bebas uppercase">Vídeo: ${titulo}</p>
                  <p class="text-sm mt-2">${descricao}</p>
                  <p class="text-xs mt-4 opacity-60">Vídeo não disponível</p>
                </div>
              </div>
            `;
          }
        } else {
          // Foto
          content = `
            <div class="relative">
              <img src="${imagem}" alt="${titulo}" class="w-full h-auto rounded-lg">
              <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-6">
                <h3 class="text-xl font-bebas text-[#b9963d] uppercase">${titulo}</h3>
                <p class="text-gray-300 text-sm">${descricao}</p>
              </div>
            </div>
          `;
        }
        
        modalContent.innerHTML = content;
        modal.classList.remove('hidden');
        modal.classList.add('flex');
        document.body.style.overflow = 'hidden';
      });
    });
    
    // Fechar modal
    modalClose.addEventListener('click', closeModal);
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        closeModal();
      }
    });
    
    function closeModal() {
      if (!modal || !modalContent) return;
      
      // Parar qualquer vídeo que esteja tocando
      const videos = modalContent.querySelectorAll('video');
      videos.forEach(video => {
        video.pause();
        video.currentTime = 0;
      });
      
      // Limpar o conteúdo do modal para remover iframes do YouTube
      modalContent.innerHTML = '';
      
      modal.classList.add('hidden');
      modal.classList.remove('flex');
      document.body.style.overflow = 'auto';
    }
    
    // Fechar modal com ESC
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeModal();
      }
    });

    // Botão "Ver galeria completa"
    if (verGaleriaBtn) {
      verGaleriaBtn.addEventListener('click', () => {
        alert('A galeria completa estará disponível em breve! =)');
      });
    }
  });
</script>
